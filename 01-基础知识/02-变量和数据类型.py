"""
变量的作用
定义变量
认识数据类型
格式化输出
"""

'''
在Python中，变量和数据类型是基础知识之一。变量是用于存储数据的标识符，而数据类型则指定了变量可以存储的数据类型。
以下是Python中常见的变量和数据类型：
'''
# 1.整数（int）：用于表示整数，例如1、2、3等。可以使用算术运算符进行加、减、乘、除等操作。
a = 1
b = 2
print(a + b)

# 2.浮点数（float）：用于表示带小数的数值，例如1.0、2.5等。同样可以使用算术运算符进行操作。
a = 1.0
b = 2.5
print(a + b)

# 3.布尔值（bool）：用于表示真或假，只有两个取值True和False。常用于条件判断和循环控制等场景。
a = True
b = False
if a:
    print("a为真")
else:
    print("a为假")

# 4.字符串（str）：用于表示文本，可以包含任意字符，例如"hello world"、"Python"等。可以使用加法运算符进行字符串拼接。
a = "hello"
b = "bytedance"
print(a + " " +b)

# 5.列表（list）：用于表示一组有序的数据，可以包含任意类型的数据。列表是可变的，可以进行添加、删除、修改等操作。
a = [1, 2, 3, 88.50, "a", False]
a.append(4)  # 添加元素4到列表末尾
a[1] = 5  # 修改列表中第2个元素的值为5
print(a)  # 输出[1, 5, 3, 4]

# 6.元组（tuple）：类似于列表，也用于表示一组有序的数据，但是元组是不可变的，无法进行添加、删除、修改等操作。
a = (1, 2, 3)
print(a[1])  # 输出2

# 7.字典（dict）：用于表示键值对的数据结构，例如{"name": "Tom", "age": 18}等。字典中的键必须是不可变类型，例如字符串、整数等，而值可以是任意类型的数据。
a = {"name": "Tom", "age": 18}
print(a["name"])  # 输出Tom



"""
格式化输出：
1.准备数据
2.格式化符合输出数据

tips
    %06d：表示输出的整数显示位数，不足以0补全，超出当前位数则原样输出
    %.2f：表示小数点后显示的小数位数
"""
age = 18
name = 'Tom'
weight = 17.5
stu_id = 1
stu_id2 = 1000

# 1.今年我的年龄是X岁    -- 整数 %d
print('今年我的年龄是%d岁' % age)

# 2.我的名字是X          -- 字符串 %s
print('我的名字是%s' % name)

# 3.我的体重是x公斤         -- 浮点数 %f
print('我的体重是%.3f公斤' % weight)

# 4.我的学号是x              -- %d
print('我的学号是%d' % stu_id)

# 4.1 我的学号是001
print('我的学号是%03d' % stu_id)
print('我的学号是%03d' % stu_id2)

# 5.我的名字是x，今年x岁了
print('我的名字是%s，今年%d岁了' % (name, age))

# 5.1 我的名字是x，明年x岁了
print('我的名字是%s，明年%d岁了' % (name, age+1))

# 6.我的名字是x，今年x岁了，体重x公斤，学号是x
print('我的名字是%s，今年%d岁了，体重%.2f公斤，学号是%06d' % (name, age, weight, stu_id))

# 语法： f'{表达式}'
print(f'我的名字是{name}，今年{age}岁了')